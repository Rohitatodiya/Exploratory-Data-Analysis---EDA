# -*- coding: utf-8 -*-
"""EDA -E-commerce Sales Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1co-te8WBpWeuq-FYMIzu9WhxxfBlDGfl
"""

import pandas as pd

import plotly.express as px
import plotly.graph_objects as g
import plotly.io as pio
import plotly.colors as colors
pio.templates.default ="plotly_white"

data = pd.read_csv('/content/Superstore Dataset.csv')

data

data.describe()

data.info()

"""# converting Datatime"""

data['Order Date'] = pd.to_datetime(data['Order Date'])
data['Ship Date'] = pd.to_datetime(data['Ship Date'])

data.info()

data['Order Month']= data['Order Date'].dt.month
data['Order Year'] = data['Order Date'].dt.year
data['Order Day of Week'] = data['Order Date'].dt.day_of_week

data

"""# Monthly Sales Analysis

You need to calculate the monthly sales of the store and identify which month had the highest sales and which month had the lowest sales.
"""

sales_by_month = data.groupby('Order Month')['Sales'].sum().reset_index()
fig = px.line(sales_by_month, x = 'Order Month', y ='Sales', title = 'Monthly Sales Analysis')
fig.show()

"""# Sales by Category

You need to analyze sales based on product categories and determine which category has the lowest sales and which category has the highest sales.
"""

sales_by_category = data.groupby('Category')['Sales'].sum().reset_index()

sales_by_category

fig = px.pie(sales_by_category, values = 'Sales', names='Category', hole = 0.5, color_discrete_sequence = px.colors.qualitative.Pastel)
fig.update_traces(textposition='inside', textinfo ='percent+label')
fig.update_layout(title_text ='Sales Analysis by Category',title_font = dict(size=24))
fig.show()

"""# Sales Analysis by Sub-category

The Sales analysis needs to be  done based on sub-categories
"""

sales_by_subcategory = data.groupby('Sub-Category')['Sales'].sum().reset_index()
sales_by_subcategory

fig = px.bar(sales_by_subcategory, x = 'Sub-Category',y = 'Sales', title ='Sales Analysis by Sub-Category')
fig.show()

"""# Monthly Profit Analysis

You need to analyze the monthly profit from sales and determine which month had the highest profit.
"""

profit_by_month = data.groupby('Order Month')['Profit'].sum().reset_index()
profit_by_month

fig = px.line(profit_by_month, x = 'Order Month', y = 'Profit', title = 'Monthly Profit Analysis')
fig.show()

"""# Profit by Category

Analyze The Profit by Category and Sub-Category
"""

profit_by_category = data.groupby('Category')['Profit'].sum().reset_index()
profit_by_category

fig = px.pie(profit_by_category,
             values = 'Profit',
             names='Category',
             hole = 0.5,
             color_discrete_sequence = px.colors.qualitative.Pastel)
fig.update_traces(textposition='inside', textinfo ='percent+label')
fig.update_layout(title_text ='Profit Analysis by Category',title_font = dict(size=24))
fig.show()

"""# Profit by Sub-Category

Analyze the Subcategory
"""

profit_by_subcategory = data.groupby('Sub-Category')['Profit'].sum().reset_index()
profit_by_subcategory

fig = px.bar(profit_by_subcategory, x = 'Sub-Category',y = 'Profit', title ='Profit Analysis by Sub-Category')
fig.show()

"""# Sales and Profit - Customer Segment

Analyze the sales and profit by customer segment
"""

data.head()

sales_profit_by_segment = data.groupby('Segment').agg({'Sales':'sum','Profit':'sum'}).reset_index()

color_palette = colors.qualitative.Pastel

fig = go.Figure()
fig.add_trace(go.Bar(x = sales_profit_by_segment['Segment'],
                     y= sales_profit_by_segment['Sales'],
                     name = 'Sales',
                     marker_color = color_palette[0]))
fig.add_trace(go.Bar(x = sales_profit_by_segment['Segment'],
                     y= sales_profit_by_segment['Profit'],
                     name = 'Profit',
                     marker_color = color_palette[1]))

fig.update_layout(title = 'Sales and Profit Analysis by Customer Segment',
                  xaxis_title ='Customer Segment', yaxis_title = 'Amount')
fig.show()

"""# Sales to Profit Ratio

Analyze the Sales to Profit Ratio
"""

sales_profit_by_segment = data.groupby('Segment').agg({'Sales':'sum','Profit':'sum'}).reset_index()
sales_profit_by_segment['Sales_to_profit_Ratio'] = sales_profit_by_segment['Sales']/ sales_profit_by_segment['Profit']
print(sales_profit_by_segment[['Segment','Sales_to_profit_Ratio']])

